name: releaser

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+alpha[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+beta[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+rc[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  build64:
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - msystem: CLANG64
            arch: clang-x86_64
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.msystem }}
          install: >-
            git
            mingw-w64-${{ matrix.arch }}-clang
            mingw-w64-${{ matrix.arch }}-cmake
            mingw-w64-${{ matrix.arch }}-compiler-rt
            mingw-w64-${{ matrix.arch }}-lld
            mingw-w64-${{ matrix.arch }}-ninja
            mingw-w64-${{ matrix.arch }}-tools
      - name: Run ninja
        shell: msys2 {0}
        run: |
          mkdir -p build/64bit
          cd build
          rm -f 64bit/CMakeCache.txt && cmake -S .. -B 64bit --preset 64bit && \
          cmake --build 64bit --target psdtoolkit_main
      - name: Upload binaries
        uses: actions/upload-artifact@v2
        with:
          name: bin64
          path: |
            build/64bit/bin/**/*
  build32:
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - msystem: CLANG32
            arch: clang-i686
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.msystem }}
          install: >-
            git
            vim
            mingw-w64-${{ matrix.arch }}-clang
            mingw-w64-${{ matrix.arch }}-cmake
            mingw-w64-${{ matrix.arch }}-compiler-rt
            mingw-w64-${{ matrix.arch }}-lld
            mingw-w64-${{ matrix.arch }}-lua51
            mingw-w64-${{ matrix.arch }}-ninja
            mingw-w64-${{ matrix.arch }}-tools
      - name: Build
        shell: msys2 {0}
        run: |
          mkdir -p build/32bit
          cd build
          rm -f 32bit/CmakeCache.txt && cmake -S .. -B 32bit --preset 32bit -DFORMAT_SOURCES=ON && \
          cmake --build 32bit --target psdtoolkit_assist --target psdtoolkit_bridge
      - name: Upload binaries
        uses: actions/upload-artifact@v2
        with:
          name: bin32
          path: |
            build/32bit/bin/**/*
  create-release:
    needs: [build64, build32]
    runs-on: ubuntu-latest
    steps:
      - name: setup
        run: |
          sudo apt install -y cmake ninja-build pandoc
      - name: Get the version
        id: get_version
        run: echo ::set-output name=tag::${GITHUB_REF/refs\/tags\//}
      - uses: actions/checkout@v2
      - name: Download artifacts
        uses: actions/download-artifact@v2
      - name: Create package
        run: |
          mkdir build
          cd build
          rm -rf CMakeCache.txt && cmake -GNinja -DBUILD_DOCS=1 -DBUILD_PACKAGE=1 -DCMAKE_BUILD_TYPE=Release .. && cmake --build . --target make_doc --target make_package
          cp -r ../bin64/* bin/
          cp -r ../bin32/* bin/
          cd bin && zip -r ../../assets.zip * && cd ..
          rm -rf CMakeCache.txt && cmake -GNinja -DBUILD_DOCS=1 -DBUILD_PACKAGE=1 -DCMAKE_BUILD_TYPE=Release -DEXPORT_DIR_NAME=bin_en -DEXA_SUFFIX=_en.exa .. && cmake --build . --target make_doc --target make_package
          cp -r ../bin64/* bin_en/
          cp -r ../bin32/* bin_en/
          cd bin_en && zip -r ../../assets_en.zip * && cd ..
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true
          prerelease: false
          body: |
            ### 注意事項
            
            - 拡張編集 0.93rc1 との組み合わせには既知の問題があるため、**通常の動画制作には拡張編集 0.92** を強く推奨します。
            - PSDToolKit は現在 ベータ版 です。バージョンアップの際には **バックアップを強く推奨** します。

            ### ダウンロード
            
            - [psdtoolkit_${{ steps.get_version.outputs.tag }}.zip](https://github.com/oov/aviutl_psdtoolkit/releases/download/${{ steps.get_version.outputs.tag }}/psdtoolkit_${{ steps.get_version.outputs.tag }}.zip)
            - [psdtoolkit_${{ steps.get_version.outputs.tag }}_enpatched.zip](https://github.com/oov/aviutl_psdtoolkit/releases/download/${{ steps.get_version.outputs.tag }}/psdtoolkit_${{ steps.get_version.outputs.tag }}_enpatched.zip) (for English patched AviUtl)
            
            #### 解凍したファイルが文字化けする場合
            
            お使いの解凍ソフトが原因です。
            zip ファイルを右クリックし、メニューから `プログラムから開く` → `エクスプローラー` を選んでファイルを取り出してください。
            
            ### バージョンアップ手順
            
            使用中のバージョン|バージョンアップ手順
            ---|---
            0.2beta14以降|バックアップした上で、全てのファイルを上書きしてください。
            0.2beta13|現在の環境から `PSDToolKit\口パク準備 設定上書き.exa` を削除し、全てのファイルを上書きしてください。
            それ以前|上書きできないため、以前導入した PSDToolKit を削除するか、あるいは環境を新規に作り直してください。
            
            ### 変更点
            
            - ＊＊＊＊
            
            ### 過去のバージョンとの互換性について
            
            #### v0.2.0beta61 以降
            
            いくつかの問題を修正するため、レイヤー合成周りのプログラムを完全に書き直しました。
            もし明らかな問題を発見された場合は Twitter などでご報告いただけると嬉しいです。
            
            #### v0.2.0beta57 以降
            
            `AudioMixer.auf` は単体配布版を同梱する形になり、合わせて一部の仕様が変更になりました。
            `チャンネルストリップ` を使用しているプロジェクトファイルでは一部再設定が必要になる場合があります。
            
            #### v0.2beta50 以降
            
            Krita で生成した PSD ファイル用の `*.anm` ファイルは、バグ修正の影響で v0.2beta50 以降で動かなくなりました。
            お手数ですが、この症状が発生した場合は `*.anm` ファイルを作り直してください。
            Krita を使用していない場合は影響ありません。
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./assets.zip
          asset_name: psdtoolkit_${{ steps.get_version.outputs.tag }}.zip
          asset_content_type: application/zip
      - name: Upload Release English patched Asset
        id: upload-release-enpatched-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./assets_en.zip
          asset_name: psdtoolkit_${{ steps.get_version.outputs.tag }}_enpatched.zip
          asset_content_type: application/zip
